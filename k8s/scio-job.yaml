apiVersion: batch/v1
kind: Job
metadata:
  name: scio-streaming-transform
  namespace: spotify-pipeline
  labels:
    app: scio-pipeline
    component: data-processing
spec:
  template:
    metadata:
      labels:
        app: scio-pipeline
    spec:
      restartPolicy: Never
      containers:
      - name: scio-runner
        image: spotify-pipeline/scio:latest
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash"]
        args:
          - "-c"
          - |
            cd /app && 
            sbt "runMain com.spotify.pipeline.transforms.AzureStreamingHistoryTransform $(date -d yesterday '+%Y-%m-%d')"
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: spotify-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: spotify-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: spotify-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: spotify-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: spotify-secrets
              key: DB_PASSWORD
        - name: ADLS_ACCOUNT_NAME
          valueFrom:
            secretKeyRef:
              name: spotify-secrets
              key: ADLS_ACCOUNT_NAME
        - name: ADLS_ACCOUNT_KEY
          valueFrom:
            secretKeyRef:
              name: spotify-secrets
              key: ADLS_ACCOUNT_KEY
        - name: ADLS_CONTAINER_NAME
          valueFrom:
            configMapKeyRef:
              name: spotify-config
              key: ADLS_CONTAINER_NAME
        - name: DATABRICKS_WORKSPACE_URL
          valueFrom:
            secretKeyRef:
              name: spotify-secrets
              key: DATABRICKS_WORKSPACE_URL
        - name: DATABRICKS_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: spotify-secrets
              key: DATABRICKS_ACCESS_TOKEN
        - name: DATABRICKS_WAREHOUSE_ID
          valueFrom:
            secretKeyRef:
              name: spotify-secrets
              key: DATABRICKS_WAREHOUSE_ID
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        volumeMounts:
        - name: app-config
          mountPath: /app/src/main/resources/application.conf
          subPath: application.conf
      volumes:
      - name: app-config
        configMap:
          name: scio-config
      backoffLimit: 3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scio-config
  namespace: spotify-pipeline
data:
  application.conf: |
    include "application-azure.conf"
    
    spotify.pipeline {
      beam {
        runner = "DirectRunner"
        project = "spotify-k8s-pipeline"
      }
    }
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: scio-daily-pipeline
  namespace: spotify-pipeline
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: scio-pipeline
            type: cronjob
        spec:
          restartPolicy: OnFailure
          containers:
          - name: scio-runner
            image: spotify-pipeline/scio:latest
            command: ["/bin/bash"]
            args:
              - "-c" 
              - |
                cd /app &&
                sbt "runMain com.spotify.pipeline.transforms.AzureStreamingHistoryTransform $(date -d yesterday '+%Y-%m-%d')"
            envFrom:
            - configMapRef:
                name: spotify-config
            - secretRef:
                name: spotify-secrets
            resources:
              requests:
                memory: "2Gi"
                cpu: "1000m"
              limits:
                memory: "4Gi"
                cpu: "2000m"